<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.mapper.ProductMapper">
    <resultMap id="ProductEntityMap" type="com.example.springboot.entity.Product">
        <id column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_description" property="productDescription"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_num" property="productNum"/>
        <result column="product_image" property="productImage"/>
        <result column="product_status" property="productStatus"/>
        <result column="product_categories" property="productCategories"/>
        <result column="product_color" property="productColor"/>
        <result column="minPrice" property="minPrice"/>
        <result column="maxPrice" property="maxPrice"/>
    </resultMap>

    <!--findAllProduct-->
    <select id="findAllProduct" resultMap="ProductEntityMap">
        SELECT * FROM product WHERE product_status=1
    </select>
    <!--findProductByInput-->
    <select id="findProductByInput" resultMap="ProductEntityMap">
        SELECT * FROM product
        WHERE product_status=1
            <if test="minPrice != null and maxPrice != null">
                AND product_price BETWEEN #{minPrice} AND #{maxPrice}
            </if>
            <if test="productName != null and productName != ''">
                AND product_name LIKE CONCAT('%', #{productName}, '%')
            </if>
            <if test="productCategories != null and productCategories != ''">
                AND product_categories = #{productCategories}
            </if>
            <if test="productColor != null and productColor != ''">
                AND product_color = #{productColor}
            </if>
    </select>
    <!--insertProductByInput-->
    <insert id="insertProduct" parameterType="com.example.springboot.entity.Product">
        INSERT INTO product
        (product_name, product_description, product_price, product_num, product_image, product_status, product_categories, product_color)
        VALUES
        (#{productName}, #{productDescription}, #{productPrice}, #{productNum}, #{productImage}, #{productStatus}, #{productCategories}, #{productColor})
    </insert>
    <!-- deleteProductById -->
    <update id="deleteProductById" parameterType="java.lang.Integer">
        UPDATE product
        SET product_status = 2
        WHERE product_id = #{productId} AND product_status = 1
    </update>

    <!-- updateProductById -->
    <update id="updateProductById" parameterType="com.example.springboot.entity.Product">
        UPDATE product
        SET
        product_name = #{productName},
        product_description = #{productDescription},
        product_price = #{productPrice},
        product_num = #{productNum},
        product_image = #{productImage},
        product_status = #{productStatus},
        product_categories = #{productCategories},
        product_color = #{productColor}
        WHERE
        product_id = #{productId}
    </update>





</mapper>
