spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/inventory-service
spring.datasource.username=root
spring.datasource.password=1phy187
spring.jpa.hibernate.ddl-auto=create-drop
server.port=8082
eureka.client.serviceUrl.defaultZone= http://eureka:petcove@localhost:8761/eureka
spring.application.name=inventory-service

spring.mvc.hiddenmethod.filter.enabled = true

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=placeorderID
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=OrderPlacedEvent:com.petcove.inventoryservice.event.OrderPlacedEvent

spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.spring.value.default.type = com.petcove.inventoryservice.event.OrderPlacedEvent
#spring.kafka.consumer.properties.spring.use.type.info.headers = false
# spring.kafka.listener.type=batch

#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=false